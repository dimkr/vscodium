name: linux_build

on:
  schedule:
    - cron: '0 0 * * *'
  push:
  pull_request:
    branches: [ master ]

jobs:
  linux:
    runs-on: ubuntu-latest
    container: 
      image: ${{ matrix.image }}
      env:
        OS_NAME: 'linux'
        VSCODE_ARCH: ${{ matrix.vscode_arch }}
        LDFLAGS: '-static-libgcc -static-libstdc++'

    strategy:
      fail-fast: false
      matrix:
        vscode_arch: [x64, arm64, arm]
        include:
        - vscode_arch: x64
          npm_arch: x64
          image: vscodium/vscodium-linux-build-agent:x64
        - vscode_arch: arm64
          npm_arch: arm64
          image: vscodium/vscodium-linux-build-agent:buster-arm64
        - vscode_arch: arm
          npm_arch: armv7l
          image: vscodium/vscodium-linux-build-agent:buster-armhf

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.3
        with:
          node-version: 12.14.1

      - name: Install Yarn
        run: npm install -g yarn

      - name: Clone VSCode repo
        run: ./get_repo.sh

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_arch: ${{ matrix.npm_arch }}
        run: ./build.sh

      - name: Zip release
        run: |
          cd VSCode-linux-${VSCODE_ARCH}
          tar czf ../VSCodium-linux-${VSCODE_ARCH}-${LATEST_MS_TAG}.tar.gz .
        if: env.SHOULD_BUILD == 'yes'

      - name: Generate shasums
        run: ./sum.sh
        if: env.SHOULD_BUILD == 'yes'
      
      - name: Release
        uses: softprops/action-gh-release@v1
        if: env.SHOULD_BUILD == 'yes'
        with:
          tag_name: ${{ env.LATEST_MS_TAG }}
          files: |
            ./*.sha256
            ./*.zip
            ./*.tar.gz
            ./*.deb
            ./*.rpm
            ./*.AppImage
            ./*.AppImage.zsync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update versions repo
        if: env.SHOULD_BUILD == 'yes'
        run: ./update_version.sh
        env:
          GITHUB_TOKEN: ${{ secrets.STRONGER_GITHUB_TOKEN }}
          GITHUB_USERNAME: ${{ github.repository_owner }}

